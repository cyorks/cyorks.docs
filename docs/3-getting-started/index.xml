<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>3 Getting started with OMOP on Connected Yorkshire Data Platform</title>
    <link>https://cyorks.github.io/cyorks.docs/3-getting-started/</link>
    <description>Recent content in 3 Getting started with OMOP on Connected Yorkshire Data Platform</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://cyorks.github.io/cyorks.docs/3-getting-started/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>3.1 Introduction to OMOP objects and concepts</title>
      <link>https://cyorks.github.io/cyorks.docs/3-getting-started/3-1-objects-and-concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cyorks.github.io/cyorks.docs/3-getting-started/3-1-objects-and-concepts/</guid>
      <description>OMOP objects and concepts OMOP is a Common Data Model adopted for the majority of the clinical data available via the Connected Yorkshire Data Platform.
Person The person table holds a record for each person with clinical data in the model along with some basic demographic information.
Observation period The observation_period table defines a single period for each person during which it is possible that clinical data may be observed for that person.</description>
    </item>
    
    <item>
      <title>3.2 Querying CYorks OMOP</title>
      <link>https://cyorks.github.io/cyorks.docs/3-getting-started/3-2-querying-omop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cyorks.github.io/cyorks.docs/3-getting-started/3-2-querying-omop/</guid>
      <description>PersonBasic demographic information is held in the person table.
select person_id, year_of_birthfrom person;ggplot(person_year, aes(x = year_of_birth)) + geom_bar()Everything in OMOP is a concept stored in the concept table. When we query many of the data items directly, we just see the concept ids.
select person_id, gender_concept_idfrom person;person_gender &amp;lt;- person_gender %&amp;gt;% group_by(gender_concept_id) %&amp;gt;% summarise(n = n())kable(person_gender, align = &amp;quot;l&amp;quot;)gender_concept_idn850723873853226099855144545491224If we want to find out what the concept ids mean, we need to look in the concept table.</description>
    </item>
    
  </channel>
</rss>